{"version":3,"sources":["features/films/components/movie-list/MovieElement/MovieElement.module.scss","features/favoris/components/favori-list/FavoriElement/FavoriElement.module.scss","components/header/Header.js","components/utils/Loading.js","features/films/components/movie-details/MovieDetails.js","features/films/components/movie-list/MovieElement/MovieElement.js","features/films/components/movie-list/MovieList.js","conf/api.movie.js","features/films/components/search-bar/SearchBar.js","features/films/index.js","features/favoris/components/favori-list/FavoriElement/FavoriElement.js","features/favoris/components/favori-list/FavoriList.js","features/favoris/index.js","conf/api.firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","to","activeClassName","Component","style","minHeight","alt","src","MovieDetails","this","props","movie","title","img","details","description","MovieElement","mouseEnter","updateSelectedMovie","onClick","Style","container","width","isFavori","removeFavori","addFavori","MovieList","movies","map","m","index","key","favoris","includes","apiMovie","axios","baseURL","interceptors","request","use","req","headers","apiMovieMap","poster_path","release_date","vote_average","vote_count","overview","SearchBar","submit","values","actions","query","Object","keys","k","join","get","then","response","data","results","moviesApi","updateMovies","setSubmitting","catch","err","console","log","onSubmit","initialValues","language","handleSubmit","handleChange","handleBlur","isSubmitting","name","placeholder","onChange","onBlur","value","type","disabled","loaded","f","selectedMovie","Loading","FavoriElement","favori","FavoriList","apiFirebase","App","setState","state","updateFavori","slice","film","find","push","saveFavoris","findIndex","splice","put","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.71de508f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieElement_container__27wwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FavoriElement_container__3XW-5\"};","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nexport default class Header extends Component {\n\n  render() {\n    return (\n      <header className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/movies/film\">Films</a>\n        <button className=\"navbar-toggler\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink to=\"/movies/film\" className=\"nav-link\" activeClassName=\"active\" > Films </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/movies/favoris\" className=\"nav-link\" activeClassName=\"active\"> Favoris </NavLink>\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n}","import React from 'react';\n\nexport default () => {\n  return (\n    <div style={ { minHeight: '100vh'} } className=\"d-flex flex-row justify-content-center align-items-center w-100\">\n      <img alt=\"loading gif\" src=\"https://i.redd.it/ounq1mw5kdxy.gif\" />\n    </div>\n  );\n}","import React, { Component } from 'react';\n\nexport default class MovieDetails extends Component {\n\n  render() {\n    return <div className=\"w-25 bg-light p-4 d-flex flex-column\">\n      <h5>{ this.props.movie.title }</h5>\n      <hr className=\"w-100\"/>\n      <div>\n        <img alt=\"movie\" className=\"mx-auto d-block w-100\" src={ this.props.movie.img } />\n      </div>\n      <hr className=\"w-100\"/>\n      <p className=\"text-secondary\">{ this.props.movie.details }</p>\n      <p>{ this.props.movie.description }</p>\n    </div>\n  }\n\n}","import React, { Component } from 'react';\nimport Style from './MovieElement.module.scss';\n\nexport default class MovieElement extends Component {\n\n\n  mouseEnter = () => {\n    this.props.updateSelectedMovie(this.props.movie.title);\n  }\n\n  render() {\n    return (\n      <div onClick={ this.mouseEnter } className={ \"d-flex flex-row bg-light \" + Style.container }>\n        <img alt=\"film\" width=\"185\" src={ this.props.movie.img }  />\n        <div className=\"flex-fill d-flex flex-column p-3\">\n          <h5>{ this.props.movie.title }</h5>\n          <hr className=\"w-100\" />\n          <p className=\"flex-fill\">{ this.props.movie.details }</p>\n          <div className=\"d-flex flex-row justify-content-end\">\n            { this.props.isFavori ? (\n              <button onClick={ () => {this.props.removeFavori(this.props.movie.title) }} className=\"btn btn-small btn-danger\">Remove</button>\n            ) : (\n              <button onClick={ () => {this.props.addFavori(this.props.movie.title) }} className=\"btn btn-small btn-primary\">Add</button>\n            ) }\n          </div>\n        </div>\n      </div>\n    );\n    \n  }\n\n}","import React, { Component } from 'react';\nimport MovieElement from './MovieElement/MovieElement';\n\nexport default class MovieList extends Component {\n  render() {\n    return (\n      <div className=\"w-75 d-flex flex-row flex-wrap justify-content-center\">\n        { this.props.movies.map( (m, index) => (\n          <MovieElement \n            key={ m.title + index } \n            movie={ m } \n            isFavori={ this.props.favoris.includes(m.title) }\n            addFavori={ this.props.addFavori }\n            removeFavori={ this.props.removeFavori }\n            updateSelectedMovie={ () => { this.props.updateSelectedMovie(index) } } \n          />\n        ))}\n      </div>\n    );\n  }\n\n}","import * as axios from 'axios';\n\nconst apiMovie = axios.create({\n  baseURL: 'https://api.themoviedb.org/4'\n})\n\napiMovie.interceptors.request.use( req => {\n  req.headers['Authorization'] = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2YyMDg2MTljZjQ0Y2E0OTEwOTAzN2Q3NWE2NGNkZiIsInN1YiI6IjVlYjk1ZGFiN2QyYmMxMDAxZDAwMzI5NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MrZiwPBOYYIMuZt3TOoboF-eOa6KBMo8atx-BRQqlJo'\n  return req;\n})\n\nexport default apiMovie;\n\n\nexport const apiMovieMap = (m) => ({\n  img: 'https://image.tmdb.org/t/p/w500' + m.poster_path,\n  title: m.title,\n  details: `${ m.release_date } | ${ m.vote_average }/10 (${ m.vote_count })`,\n  description: m.overview\n})","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport apiMovie, { apiMovieMap } from '../../../../conf/api.movie';\n\nexport default class SearchBar extends Component {\n  \n  submit = (values, actions) => {\n    const query = '?' + Object.keys(values).map( k => `${ k }=${ values[k]}&`).join('');\n    apiMovie.get('/search/movie' + query)\n            .then( response => response.data.results )\n            .then( moviesApi => {\n              const movies = moviesApi.map(apiMovieMap)\n              this.props.updateMovies(movies);\n              actions.setSubmitting(false);\n            })\n            .catch( err => console.log(err));\n        \n  }\n  \n  render() {\n    return (\n      <Formik\n        onSubmit={ this.submit }\n        initialValues={ { query: '', language: 'en-US' } }\n      >\n        { ({ handleSubmit, handleChange, handleBlur, isSubmitting }) => (\n          <form className=\"d-flex flex-row p-2 m-2\" onSubmit={ handleSubmit }>\n            <input name=\"query\" className=\"flex-fill form-control mr-2\" placeholder=\"Search ...\" onChange={ handleChange } onBlur={ handleBlur } />\n            <select className=\"mr-2 form-control w-25\" name=\"language\"  onChange={ handleChange } onBlur={ handleBlur }>\n              <option value=\"en-US\"> Anglais </option>\n              <option value=\"fr-FR\"> Francais </option>\n            </select>\n            <button className=\"btn btn-small btn-success\" type=\"submit\" disabled={ isSubmitting } >Submit</button>\n          </form>\n        )}\n\n      </Formik>\n    )\n  }\n}","import React from 'react';\nimport { MovieList, MovieDetails, SearchBar } from './components';\nimport Loading from '../../components/utils/Loading';\n\nexport default (props) => {\n  return (\n    <>\n      <SearchBar updateMovies={ props.updateMovies } />\n      { props.loaded ? (\n        <div className=\"d-flex flex-row flex-fill pt-4 p-2\" >\n          <MovieList \n            movies={ props.movies } \n            updateSelectedMovie={ props.updateSelectedMovie }\n            favoris={ props.favoris.map( f => f.title ) }\n            removeFavori={ props.removeFavori }\n            addFavori={ props.addFavori }\n          />\n          <MovieDetails \n            movie={ props.movies[props.selectedMovie] }\n          />\n        </div>\n      ) : (\n        <Loading />\n      ) }\n    </>\n  )\n}","import React, { Component } from 'react';\nimport Style from './FavoriElement.module.scss';\n\nexport default class FavoriElement extends Component {\n  render() {\n    return (\n      <div className={ \"d-flex flex-row bg-light \" + Style.container }>\n        <img alt=\"film\" width=\"185\" src={ this.props.favori.img }  />\n        <div className=\"flex-fill d-flex flex-column p-3\">\n          <h5>{ this.props.favori.title }</h5>\n          <hr className=\"w-100\" />\n          <p className=\"flex-fill\">{ this.props.favori.details }</p>\n          <div className=\"d-flex flex-row justify-content-end\">\n            <button onClick={ () => {this.props.removeFavori(this.props.favori.title) }} className=\"btn btn-small btn-danger\">Remove</button>\n          </div>\n        </div>\n      </div>\n    );\n    \n  }\n\n}","import React, { Component } from 'react';\nimport FavoriElement from './FavoriElement/FavoriElement';\n\nexport default class FavoriList extends Component {\n  render() {\n    return (\n      <div className=\"w-75 d-flex flex-row flex-wrap justify-content-center\">\n        { this.props.favoris.map( (f, index) => (\n          <FavoriElement \n            key={ f.title + index } \n            favori={ f } \n            removeFavori={ this.props.removeFavori }\n          />\n        ))}\n      </div>\n    );\n  }\n\n}","import React from 'react';\nimport { FavoriList } from './components';\nimport Loading from '../../components/utils/Loading';\n\nexport default (props) => {\n  return (\n    <div className=\"d-flex flex-row flex-fill pt-4 p-2\" >\n      \n      { props.loaded ? (\n        <div className=\"d-flex flex-row flex-fill pt-4 p-2\" >\n          <FavoriList  \n            favoris={ props.favoris }\n            removeFavori={ props.removeFavori }\n          />\n        </div>\n      ) : (\n        <Loading />\n      ) }\n    </div>\n  )\n}","import * as axios from 'axios';\n\nconst apiFirebase = axios.create({\n  baseURL: 'https://films-cb930.firebaseio.com/'\n});\n\nexport default apiFirebase;","import React, { Component } from 'react';\nimport { Header } from './components';\nimport Films from './features/films';\nimport Favoris from './features/favoris';\nimport apiMovie, { apiMovieMap } from './conf/api.movie';\nimport apiFirebase from './conf/api.firebase';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: null,\n      selectedMovie: 0,\n      loaded: false,\n      favoris: null\n    }\n  }\n\n  updateSelectedMovie = (index) => {\n    this.setState({\n      selectedMovie: index\n    })\n  }\n\n  componentDidMount() {\n    apiMovie.get('/discover/movie')\n            .then( response => response.data.results )\n            .then( moviesApi => {\n              const movies = moviesApi.map(apiMovieMap)\n              this.updateMovies(movies);\n            })\n            .catch( err => console.log(err));\n\n    apiFirebase.get('favoris.json')\n               .then( response => {\n                let favoris = response.data ? response.data : [];\n                this.updateFavori(favoris)\n              })\n  }\n\n  updateMovies = (movies) => {\n    this.setState({\n      movies,\n      loaded: this.state.favoris ? true : false\n    })\n  }\n\n  updateFavori = (favoris) => {\n    this.setState({\n      favoris,\n      loaded: this.state.movies ? true : false\n    })\n  }\n\n  addFavori = (title) => {\n    const favoris = this.state.favoris.slice();\n    const film = this.state.movies.find( m => m.title === title );\n    favoris.push(film);\n    this.setState({\n      favoris\n    }, () => {\n      this.saveFavoris();\n    })\n  }\n\n  removeFavori = (title) => {\n    const favoris = this.state.favoris.slice();\n    const index = this.state.favoris.findIndex( f => f.title === title );\n    favoris.splice(index, 1);\n    this.setState({\n      favoris\n    }, () => {\n      this.saveFavoris();\n    })\n  }\n\n  saveFavoris = () => {\n    apiFirebase.put('favoris.json', this.state.favoris);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App d-flex flex-column\">\n          <Header />\n          <Switch>\n            <Route\n              path=\"/movies\"\n              render={(props) => {\n                return (\n                  <Films\n                    {...props}\n                    loaded={this.state.loaded}\n                    updateMovies={this.updateMovies}\n                    updateSelectedMovie={this.updateSelectedMovie}\n                    movies={this.state.movies}\n                    selectedMovie={this.state.selectedMovie}\n                    addFavori={this.addFavori}\n                    removeFavori={this.removeFavori}\n                    favoris={this.state.favoris}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/movies/favoris\"\n              render={(props) => {\n                return (\n                  <Favoris\n                    {...props}\n                    loaded={this.state.loaded}\n                    favoris={this.state.favoris}\n                    removeFavori={this.removeFavori}\n                  />\n                );\n              }}\n            />\n            <Redirect to=\"/movies\" />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}